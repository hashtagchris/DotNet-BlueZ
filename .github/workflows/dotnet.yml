name: 'Build'
on:
  push:
    branches:
      - main
      - develop

env:
  CONFIG: Release
  NUGET_URL: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
  PROJECT_FOLDER: src

jobs:
  release:
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # avoid shallow clone, useful for nbgv
      - uses: dotnet/nbgv@master
        id: nbgv
        with:
          setAllVars: true
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.nbgv.outputs.SemVer2 }}
          release_name: v${{ steps.nbgv.outputs.SemVer2 }}
          prerelease: ${{ steps.nbgv.outputs.PublicRelease == 'False' }}
      - name: Insert NuGet Config Credentials
        run: |
          rm -f ./nuget.config
          mv ./nuget.ci.config ./nuget.config
          echo $(sed -e "s/\${USER}/${{ secrets.REGISTRY_USER }}/" -e "s@\${PAT}@${{ secrets.PACKAGE_TOKEN }}@" nuget.config) > nuget.config
      - name: Build NuGet package
        run: |
          dotnet clean ${{ env.PROJECT_FOLDER }} --configuration ${{ env.CONFIG }}
          dotnet build ${{ env.PROJECT_FOLDER }} --configuration ${{ env.CONFIG }}
          dotnet pack ${{ env.PROJECT_FOLDER }} --configuration ${{ env.CONFIG }} /p:Version=${{ steps.nbgv.outputs.SemVer2 }}
      - name: Push package to package repository
        run: |
          dotnet nuget push "**/*.nupkg" --source "github"